#include <iostream>
#include <string>
#include <openssl/sha.h>
#include <openssl/rsa.h>
#include <openssl/pem.h>

std::string sha512(const std::string& input) {
    unsigned char hash[SHA512_DIGEST_LENGTH];
    SHA512_CTX shaContext;
    SHA512_Init(&shaContext);
    SHA512_Update(&shaContext, input.c_str(), input.length());
    SHA512_Final(hash, &shaContext);

    std::stringstream ss;
    for (int i = 0; i < SHA512_DIGEST_LENGTH; i++) {
        ss << std::hex << std::setw(2) << std::setfill('0') << (int)hash[i];
    }

    return ss.str();
}

std::string rsaEncrypt(const std::string& message, RSA* publicKey) {
    int rsaLen = RSA_size(publicKey);
    std::vector<unsigned char> rsaResult(rsaLen);

    RSA_public_encrypt(message.length(), reinterpret_cast<const unsigned char*>(message.c_str()), rsaResult.data(), publicKey, RSA_PKCS1_PADDING);

    return std::string(rsaResult.begin(), rsaResult.end());
}

int main() {
    // Пример использования
    std::string inputMessage = "Hello, World!";
    
    // Хэширование с использованием SHA-512
    std::string hashedMessage = sha512(inputMessage);
    std::cout << "SHA-512 Хэш: " << hashedMessage << std::endl;

    // Генерация ключей RSA
    RSA* rsaKeyPair = RSA_generate_key(2048, RSA_F4, nullptr, nullptr);
    
    // Шифрование сообщения с использованием RSA
    std::string encryptedMessage = rsaEncrypt(inputMessage, rsaKeyPair);
    std::cout << "Зашифрованное сообщение: " << encryptedMessage << std::endl;

    return 0;
}